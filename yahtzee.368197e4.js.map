{"version":3,"sources":["../node_modules/home-on-the-range/index.js","../Dicebox/preMade.js","preBuiltDiceGames/Yahtzee/yahtzee.js"],"names":["PreMadeDice","name","sidesOnDice","diceRoll","div","document","createElement","classList","add","boxName","textContent","subTitle","diceArea","append","querySelector","Yahtzee","diceArray","i","length","create","rollDice","addEventListener","rolls","querySelectorAll","roll","createDice"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"yahtzee.368197e4.js","sourceRoot":"..\\src","sourcesContent":["h = {\r\n    range: function(firstNumber, secondNumber) {\r\n \r\n        if (firstNumber < 0 && secondNumber === undefined) {\r\n            secondNumber = 0;\r\n            return makeArray(firstNumber, secondNumber);\r\n        } \r\n        \r\n        else if (secondNumber === undefined) {\r\n            secondNumber = firstNumber;\r\n            firstNumber = 0;\r\n            return makeArray(firstNumber, secondNumber);\r\n        } \r\n        \r\n        else if (firstNumber <= secondNumber) {\r\n            return makeArray(firstNumber, secondNumber);\r\n        } \r\n        \r\n        else if (firstNumber >= secondNumber) {\r\n            return makeReverseArray(firstNumber, secondNumber);\r\n        }\r\n    \r\n        return rangeArray;\r\n    },\r\n    \r\n    // adds strings and numbers\r\n    add: function(...numbers) {\r\n        let numbersFlattened = numbers.reduce((accumulator, currentValue) => accumulator.concat(currentValue), []);\r\n\r\n        let numbersToBeSummed = numbersFlattened.map((item) => Number(item));\r\n        \r\n    \r\n        let sum = numbersToBeSummed.reduce((accumulator, currentValue) => accumulator + currentValue);\r\n        return sum;\r\n    },\r\n    \r\n    // complete array flatten\r\n    deep: function(...arrays) {\r\n        let levelArray = [];\r\n        for (let i = 0; i < arrays.length; i++) {\r\n            if(!Array.isArray(arrays[i])) {\r\n                levelArray.push(arrays[i]);\r\n                continue;\r\n            }\r\n            let newArray = arrays[i].flat(Infinity);\r\n            levelArray.push(newArray);\r\n        }\r\n        let flatArray = levelArray.flat();\r\n        return flatArray;\r\n    },\r\n\r\n    // \r\n    createFibArray: function(numToReach) {\r\n        let firstNum = BigInt(1);\r\n        let secondNum = BigInt(1);\r\n        let total = 0;\r\n        let fibArray = [];\r\n        let count = 0;\r\n        fibArray.push(BigInt(total));\r\n        fibArray.push(firstNum);\r\n        fibArray.push(secondNum);\r\n        while(true) {\r\n            total = BigInt(firstNum + secondNum);\r\n            if (count < numToReach) {\r\n                fibArray.push(total);\r\n                firstNum = BigInt(secondNum);\r\n                secondNum = BigInt(total);\r\n                count++;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return fibArray;\r\n    },\r\n    getPrimeFactors: function(number) {\r\n        let primeArray = [];\r\n        let i = 2;\r\n        while(i < 1000000) {\r\n            if (number % i === 0) {\r\n                primeArray.push(i);\r\n                number /= i;\r\n                i = 2;\r\n            }\r\n            else {\r\n                i++;\r\n            }\r\n        }\r\n        return primeArray;\r\n    },\r\n\r\n    findLargestPrimeFactor: function(number) {\r\n        let primeArray = this.getPrimeFactors(number);\r\n        let largestPrime = Math.max(...primeArray);\r\n        return largestPrime;\r\n    },\r\n\r\n    findSmallestPrimeFactor: function(number) {\r\n        let primeArray = this.getPrimeFactors(number);\r\n        let smallestPrime = Math.min(...primeArray);\r\n        return smallestPrime;\r\n    },\r\n\r\n    numIsPalindrome: function(number) {\r\n        let newNumber = String(number).split('');\r\n        let numToCheck = Math.floor(newNumber.length / 2);\r\n        for (let i = 0; i <= numToCheck; i++) {\r\n            if (newNumber[i] == newNumber[newNumber.length - i - 1]) {\r\n                if (i == numToCheck) {\r\n                    return true;\r\n                }\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    findLCM: function(...args) {\r\n        let newArray = this.deep(args);\r\n        let numArray = newArray.map(item => Number(item));\r\n        let found = false;\r\n        let answer = 2;\r\n        while (found === false) {\r\n            found = numArray.every(item => {\r\n                return answer % item === 0;\r\n            });\r\n            if (found === true) return answer;\r\n            answer++;\r\n        }\r\n        return answer;\r\n    },\r\n\r\n    findNthPrime: function(number) {\r\n        let count = 0;\r\n        let rangeArray = h.range(2, 50000000);\r\n        for (let item of rangeArray) {\r\n            let isPrime = true;\r\n            for (i = 2; i <= Math.sqrt(item); i++){\r\n                if(item % i === 0 && item != i){\r\n                   isPrime = false;\r\n                }\r\n             }\r\n            if (isPrime === true) {\r\n                count++;\r\n                if (count === number) {\r\n                    return item;\r\n                }\r\n            }\r\n        }\r\n        return primeArray;\r\n    },\r\n\r\n    getPrimeArray: function(...args) {\r\n        let primeArray = [];\r\n        if (args.length === 1) {\r\n            args[1] = args[0];\r\n            args[0] = 2;\r\n        }\r\n        let rangeArray = h.range(args[0], args[1]);\r\n        for (let item of rangeArray) {\r\n            let isPrime = true;\r\n            for (i = 2; i <= Math.sqrt(item); i++){\r\n                if(item % i === 0 && item != i){\r\n                   isPrime = false;\r\n                }\r\n             }\r\n            if (isPrime === true) {\r\n                primeArray.push(item);\r\n            }\r\n        }\r\n        return primeArray;\r\n    },\r\n\r\n    isPrime: function(number) {\r\n        for (i = 2; i <= Math.sqrt(number); i++){\r\n            if(number % i === 0 && number != i){\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    shuffle: function(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    },\r\n\r\n    count: function(arr, item) {\r\n        let count = 0;\r\n\r\n        for(let i = 0; i < arr.length; i++) {\r\n            if(arr[i] === item) {\r\n                count += 1;\r\n            }\r\n        }\r\n        return count;\r\n    },\r\n    removeDuplicates: function(arr) {\r\n        let uniques = [];\r\n        for (item of arr) {\r\n            if(uniques.indexOf(item) === -1) {\r\n                uniques.push(item);\r\n            }\r\n        }\r\n        return uniques;\r\n    },\r\n    randomInt: function(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    },\r\n    randomChoice: function(array) {\r\n        let chosenInt = Math.floor(Math.random() * array.length);\r\n        return array[chosenInt];\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Helper functions\r\n\r\n// Range helper -------------------------------------------------------------------------------\r\nfunction makeArray (firstNumber, secondNumber) {\r\n    let rangeArray = [];\r\n    for (let i = firstNumber; i <= secondNumber; i++) {\r\n        rangeArray.push(i);\r\n    }   \r\n    return rangeArray;\r\n}\r\n\r\nfunction makeReverseArray(firstNumber, secondNumber) {\r\n    let rangeArray = [];\r\n    for (let i = firstNumber; i >= secondNumber; i--) {\r\n        rangeArray.push(i);\r\n    }\r\n    return rangeArray;\r\n}\r\n// ------------------------------------------------------------------------------------------\r\n\r\nmodule.exports = h;","import { randomInt } from 'home-on-the-range';\r\n\r\nclass PreMadeDice {\r\n    constructor(name, sidesOnDice) {\r\n        this.name = name;\r\n        this.sidesOnDice = sidesOnDice;\r\n        this.diceRoll = '???';\r\n    }\r\n\r\n    create() {\r\n        let div = document.createElement('div');\r\n        div.classList.add('text-center', 'created-dice-box');\r\n        let boxName = document.createElement('h4');\r\n        boxName.textContent = this.name;\r\n        let subTitle = document.createElement('p');\r\n        subTitle.textContent = `(${this.sidesOnDice} sided Dice)`;\r\n        let diceArea = document.createElement('h4');\r\n        diceArea.classList.add('dice-area');\r\n        diceArea.textContent = this.diceRoll;\r\n        div.append(boxName);\r\n        div.append(subTitle);\r\n        div.append(diceArea);\r\n        document.querySelector('#dice-box').append(div);\r\n    }\r\n\r\n    rollDice(diceArea) {\r\n        let diceRoll = randomInt(1, this.sidesOnDice);\r\n        diceArea.textContent = diceRoll;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport { PreMadeDice }","import { randomInt } from 'home-on-the-range';\r\nimport { PreMadeDice } from '../../../Dicebox/preMade';\r\n\r\nclass Yahtzee {\r\n    static createDice() {\r\n        let diceArray = ['dicebox1', 'dicebox2', 'dicebox3', 'dicebox4', 'dicebox5'];\r\n        for (let i = 0; i < diceArray.length; i++) {\r\n            diceArray[i] = new PreMadeDice(`dice${i + 1}`, 6);\r\n            diceArray[i].create();\r\n        }\r\n        this.rollDice(diceArray);\r\n    }\r\n\r\n    static rollDice() {\r\n        document.querySelector('#yahtzee-button').addEventListener('click', () => {\r\n            let rolls = document.querySelectorAll('.dice-area');\r\n            for (let roll of rolls) {\r\n                roll.textContent = randomInt(1, 6);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nYahtzee.createDice();"]}